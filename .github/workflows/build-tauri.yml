name: 构建 Tauri

on:
  workflow_call:
    inputs:
      version:
        description: '应用版本'
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04, ubuntu-22.04-arm]

    steps:
      - name: 安装构建依赖
        if: matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-22.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y libglib2.0-dev \
                                libgtk-3-dev \
                                pkg-config \
                                xdg-utils \
                                build-essential \
                                librsvg2-dev \
                                libwebkit2gtk-4.0-dev \
                                libwebkit2gtk-4.1-dev \
                                libjavascriptcoregtk-4.0-dev \
                                libayatana-appindicator3-dev
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
            submodules: recursive
      - name: 设置 Nodejs
        uses: actions/setup-node@v4
        with:
            node-version: 20.x
      # 更新依赖
      - name: 更新依赖
        run: yarn
      - name: 设置 Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: 检查 Tauri 环境
        run: yarn tauri info

      - name: 构建 Tauri 应用
        if: matrix.os == 'windows-2022'
        run: yarn build:tauri -t x86_64-pc-windows-msvc -b nsis
      - name: 构建 Tauri 应用
        if: matrix.os == 'ubuntu-22.04'
        run: yarn build:tauri -t x86_64-unknown-linux-gnu -b appimage,deb
      - name: 构建 Tauri 应用
        if: matrix.os == 'ubuntu-22.04-arm'
        run: yarn build:tauri -t aarch64-unknown-linux-gnu -b appimage,deb

      - name: 准备产物目录
        if: matrix.os != 'windows-2022'
        run: |
            mkdir -p upload
            cp src/tauri/target/*/release/bundle/deb/*.deb upload/ || true
            cp src/tauri/target/*/release/bundle/appimage/*.AppImage upload/ || true
            cp src/tauri/target/*/release/bundle/dmg/*.dmg upload/ || true

      - name: 准备产物目录
        if: matrix.os == 'windows-2022'
        shell: pwsh
        run: |
            New-Item -ItemType Directory -Path upload -Force
            $files = Get-ChildItem -Path "src/tauri/target/*/release/bundle/nsis/" -Filter *.exe -Recurse
            foreach ($file in $files) {
                Copy-Item -Path $file.FullName -Destination "upload/"
            }

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
            name: ${{ inputs.version }}-${{ matrix.os }}
            path: upload/
